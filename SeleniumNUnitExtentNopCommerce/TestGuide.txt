namespace AventStack.ExtentReports.Tests
{
    [SetUpFixture]
    public abstract class Base
    {
        protected ExtentReports _extent;

        [OneTimeSetUp]
        protected void Setup()
        {
            string dir = TestContext.CurrentContext.TestDirectory + "\\";
            var fileName = this.GetType().ToString() + ".html";
            ExtentV3HtmlReporter htmlReporter = new ExtentV3HtmlReporter(dir + fileName);

            _extent = new ExtentReports();
            _extent.AttachReporter(htmlReporter);
        }

        [OneTimeTearDown]
        protected void TearDown()
        {
            Console.WriteLine("in teardown");
            _extent.Flush();
        }
    }
}



Run Test with commandline: // remove carriage return:

"C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\IDE\CommonExtensions\Microsoft\TestWindow\vstest.console.exe" 
--settings:"F:\VS-projects\SeleniumNUnitExtentNopCommerce\SeleniumNUnitExtentNopCommerce\RunSettings\FireFoxTest.runsettings" 
"F:\VS-projects\SeleniumNUnitExtentNopCommerce\SeleniumNUnitExtentNopCommerce\bin\Debug\SeleniumNUnitExtentNopCommerce.dll" 


"C:\Program Files (x86)\NUnit.org\nunit-console\nunit3-console.exe" --testparam:Browser=Firefox --settings:"F:\VS-projects\SeleniumNUnitExtentNopCommerce\SeleniumNUnitExtentNopCommerce\FireFoxTest.runsettings" "F:\VS-projects\SeleniumNUnitExtentNopCommerce\SeleniumNUnitExtentNopCommerce\bin\Debug\SeleniumNUnitExtentNopCommerce.dll" 

//input[@type='submit' and contains(., 'Google Search')]


vstest.console.exe --settings:test.runsettings test.dll

//Get the value from NUnit-console --params 
            //nunit3-console.exe --params:Browser=Firefox \SeleniumNUnitParam.dll
            //If nothing specified, test will run in Chrome browser
            //var browserType = TestContext.Parameters.Get("Browser", "Chrome");
            //Parse the browser Type, since it's Enum

Everytime you are calling GetExtent, a new instance is returned. This isn't a good way of working on a "single" report. Instead, you need to create the instance once and utilize it for all your classes:

private static ExtentReports extent;

public static synchronized ExtentReports GetExtent() {
    if (extent != null) return extent;

    extent = new ExtentReports();
    ...
}



set PATH=%PATH%;"C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\IDE\CommonExtensions\Microsoft\TestWindow"



"C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\IDE\CommonExtensions\Microsoft\TestWindow\vstest.console.exe" 
--settings:"E:\C# Projects\SeleniumNUnit\SeleniumNUnitFrameworkTemplate\SeleniumNUnitFrameworkTemplate\RunSettings\premmerce.runsettings" 
"E:\C# Projects\SeleniumNUnit\SeleniumNUnitFrameworkTemplate\SeleniumNUnitFrameworkTemplate\bin\Debug\netcoreapp3.1\SeleniumNUnitFrameworkTemplate.dll" 

"C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\IDE\CommonExtensions\Microsoft\TestWindow\vstest.console.exe" 
--settings:"E:\C# Projects\SeleniumNUnit\SeleniumNUnitFrameworkTemplate\SeleniumNUnitFrameworkTemplate\RunSettings\test.runsettings" 
"E:\C# Projects\SeleniumNUnit\SeleniumNUnitFrameworkTemplate\SeleniumNUnitFrameworkTemplate\bin\Debug\netcoreapp3.1\SeleniumNUnitFrameworkTemplate.dll" 


xpath list


Computers main menu
//ul[@class='top-menu notmobile']//a[contains(text(),'Computers')]

Notebook at computer submenu
//ul[@class='top-menu notmobile']//a[contains(text(),'Notebooks')]

//Screen shot is saved in C:\Screenshots\{datestamp}\testmethodname{timestamp}.png


TO DO LIST:

1. FIGURE OUT  HOW TO log into one report file instead of each class
2. RunSettings pass browser name to passinbrowser method.
3. Take full screen shot
